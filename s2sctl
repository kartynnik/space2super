#! /bin/sh
set -e

program='space2super'
binary="$(dirname "$0")/$program"

config_dir="${XDG_CONFIG_HOME:-$HOME/.config}/$program"
config="$config_dir/config"

default_typed_space_timeout=500
typed_space_timeout=$(
    awk '$1 == "timeout" { print $2; }' "$config" 2> /dev/null ||
        echo "$default_typed_space_timeout")

log_file="$config_dir/$program.log"
original_xmodmap="$config_dir/xmodmap.original"

_log() {
    echo "$@" >&2
}

_die() {
    _log "$@"
    exit 1
}

_check_command() {
    checked_command=$1
    if ! command -v "$checked_command" > /dev/null 2>&1; then
        _die "'s2sctl' requires the '$checked_command' command to run."
    fi
}
_check_command awk
_check_command pgrep
_check_command pkill
_check_command xmodmap

_print_keymap_expressions() {
    # Instructs `xmodmap` to print out the current keymap table in the form it can consume.
    xmodmap -pke
}

_program_running() {
    pgrep --exact --count "$program" > /dev/null 2>&1
}

_signal() {
    _signal_id=$1
    pkill --exact "-$_signal_id" "$program"
}

_restore_original_key_code_mappings() {
    xmodmap "$original_xmodmap" || _die "Restoring the original key code mappings failed."
}

start() {
    if _program_running; then
        _die "Space2Super is already active. Use 's2sctl restart' to restart it."
    fi

    _log 'Starting Space2Super...'

    mkdir -p "$config_dir"
    _print_keymap_expressions > "$original_xmodmap"

    # Determine what the original Space key code was (most likely 65).
    original_space_key_code=$(grep '\<space\>' "$original_xmodmap" | awk '{ print $2; exit; }')
    if [ -z "$original_space_key_code" ]; then
        _die "Could not find any key code associated with Space (see 'xmodmap -pke')."
    fi

    # Apply all the `xmodmap` modifications at once for performance reasons.
    {
        # Change all mentions of `space` to `Super_L`.
        awk '/keycode / {
            for (field = 1; field <= NF; ++field) {
                if ($field == "space")
                    $field = "Super_L";
            };
            print;
        }' "$original_xmodmap"

        # Map an unused key code to `space` when no modifiers are applied.
        echo "keycode any = space"
    } | xmodmap - || {
        _restore_original_key_code_mappings
        _die "Applying key code mappings failed."
    }

    "$binary" "$original_space_key_code" "$typed_space_timeout" >> "$log_file" 2>&1 &

    _log "Space2Super is now active (log file: $log_file)."
}

stop() {
    if ! _program_running; then
        _die 'Space2Super is not running.'
    fi

    _log 'Stopping Space2Super...'

    _restore_original_key_code_mappings

    if _signal TERM; then
        # Signalled. Wait a bit and check if it's done.
        sleep 0.5
        if _program_running; then
            # Still alive.
            _signal KILL
            _die 'The program did not terminate gracefully, sent SIGKILL.'
        fi
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        "$0" stop
        "$0" start
        ;;
    *)
        _die "Usage: $0 {start|stop|restart}"
        ;;
esac
